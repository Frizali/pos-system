@model List<pos_system.Models.Po>
@{
    ViewBag.Title = "Order Makanan";
    Layout = null;
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', sans-serif;
    }

    h3 {
        font-weight: 600;
        color: #333;
    }

    .card {
        border-radius: 1rem;
        overflow: hidden;
        background-color: #fff;
        transition: transform 0.2s;
    }

    .card:hover {
        transform: scale(1.01);
    }

    .card-title {
        font-weight: 600;
    }

    .btn-outline-success {
        border-radius: 1rem;
        font-size: 1.2rem;
        width: 38px;
        height: 38px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-outline-secondary {
        border-radius: 1rem;
        font-size: 0.9rem;
    }

    .sticky-total {
        background-color: #28a745;
        position: sticky;
        bottom: 0;
        z-index: 1000;
        border-radius: 1rem;
        margin-top: 2rem;
    }

    #order-details h5 {
        margin-top: 1rem;
        font-weight: bold;
    }

    #order-list .list-group-item {
        border-radius: 0.75rem;
        background-color: #fff;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
        margin-bottom: 0.5rem;
    }

    .modal-content {
        border-radius: 1rem;
    }

    #noteTextArea {
        border-radius: 0.75rem;
    }
</style>

<div class="container py-3">
    <h3 class="text-center mb-4">🍽️ Menu Makanan</h3>

    <div class="row g-4" id="menu-list">
        @foreach (var item in Model)
        {
            <div class="col-md-6 col-12">
                <div class="card shadow-sm border-0">
                    <div class="row g-0">
                        <div class="col-5">
                            <img src="@Url.Content(item.ImageUrl)" class="img-fluid w-100 h-100 object-fit-cover" alt="@item.Name">
                        </div>
                        <div class="col-7">
                            <div class="card-body d-flex flex-column justify-content-between h-100">
                                <div>
                                    <h5 class="card-title">@item.Name</h5>
                                    <p class="text-muted small">@item.Description</p>
                                    <p class="fw-bold text-success">Rp @item.Price.ToString("N0")</p>
                                </div>
                                <div>
                                    <div class="d-flex align-items-center justify-content-between mb-2">
                                        <button class="btn btn-outline-success" onclick="decreaseQty(@item.Id, @item.Price)">−</button>
                                        <span id="qty-@item.Id" class="fw-bold fs-5">@orderData.ContainsKey(item.Id) ? orderData[item.Id].qty : 0</span>
                                        <button class="btn btn-outline-success" onclick="increaseQty(@item.Id, @item.Price)">+</button>
                                    </div>
                                    <button class="btn btn-outline-secondary w-100" onclick="openNoteModal(@item.Id)">📝 Tambahkan Catatan</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="sticky-total text-white p-3 mt-4 text-end fw-bold fs-5">
        Total: Rp <span id="total-price">0</span>
    </div>

    <div id="order-details" class="mt-3 d-none">
        <h5>Detail Pesanan</h5>
        <ul class="list-group" id="order-list"></ul>
    </div>
</div>

<!-- Modal Catatan -->
<div class="modal fade" id="noteModal" tabindex="-1" aria-labelledby="noteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Catatan Menu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
                <textarea id="noteTextArea" class="form-control" rows="4" placeholder="Masukkan catatan di sini..."></textarea>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                <button class="btn btn-primary" onclick="saveNote()">Simpan</button>
            </div>
        </div>
    </div>
</div>

<script>
    let orderData = {};
    let currentNoteItemId = null;

    function increaseQty(id, price) {
        if (!orderData[id]) orderData[id] = { qty: 0, note: '', price: price };
        orderData[id].qty++;
        updateQty(id);
        updateTotal();
    }

    function decreaseQty(id, price) {
        if (!orderData[id]) return;
        if (orderData[id].qty > 0) {
            orderData[id].qty--;
            updateQty(id);
            updateTotal();
        }
    }

    function updateQty(id) {
        document.getElementById(`qty-${id}`).innerText = orderData[id]?.qty || 0;
    }

    function updateTotal() {
        let total = 0;
        const orderList = document.getElementById("order-list");
        orderList.innerHTML = "";

        let hasOrder = false;

        for (const id in orderData) {
            const item = orderData[id];
            if (item.qty > 0) {
                hasOrder = true;
                total += item.qty * item.price;

                const listItem = document.createElement("li");
                listItem.className = "list-group-item";
                listItem.innerHTML = `
                    <div><strong>${item.qty}x</strong> ID ${id}</div>
                    ${item.note ? `<div class="small fst-italic">📝 ${item.note}</div>` : ""}
                    <div class="text-end text-success fw-bold">Rp ${(item.qty * item.price).toLocaleString()}</div>
                `;
                orderList.appendChild(listItem);
            }
        }

        document.getElementById("total-price").innerText = total.toLocaleString();
        document.getElementById("order-details").classList.toggle("d-none", !hasOrder);
    }

    function openNoteModal(id) {
        currentNoteItemId = id;
        const note = orderData[id]?.note || "";
        document.getElementById("noteTextArea").value = note;

        const noteModal = new bootstrap.Modal(document.getElementById("noteModal"));
        noteModal.show();
    }

    function saveNote() {
        const noteText = document.getElementById("noteTextArea").value;
        if (!orderData[currentNoteItemId]) {
            orderData[currentNoteItemId] = { qty: 0, note: '', price: 0 };
        }
        orderData[currentNoteItemId].note = noteText;

        const noteModalEl = document.getElementById("noteModal");
        const modal = bootstrap.Modal.getInstance(noteModalEl);
        modal.hide();

        updateTotal();
    }
</script>
