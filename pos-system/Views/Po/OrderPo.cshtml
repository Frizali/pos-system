@model List<pos_system.Models.Po>
@{
    ViewBag.Title = "Order Makanan";
    Layout = null;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<div class="container py-3">
    <div class="bg-light rounded-4 shadow-sm p-4 mb-4 position-relative text-center text-dark" style="background: linear-gradient(to right, #ffc107, #ff5722);">
        <h2 class="fw-bold mb-1" style="font-family: 'Segoe UI', sans-serif; text-shadow: 1px 1px 2px rgba(0,0,0,0.2);">
            Angkringan Omahmu  <img src="~/images/Logo omahmu HD.png" alt="Logo Angkringan" width="50" class="mb-2" />
        </h2>
        <p class="fst-italic m-0 text-white">Nikmati berbagai pilihan menu khas angkringan favorit Anda</p>
    </div>

    <div class="d-flex justify-content-center mb-3 gap-2">
        <button id="orderNowBtn" class="btn btn-primary btn-sm rounded-pill active" onclick="setOrderType('now')">Order Now</button>
        <button id="poBtn" class="btn btn-outline-secondary btn-sm rounded-pill" onclick="setOrderType('po')">PO (Pre-Order)</button>
    </div>

    <div id="poForm" class="mb-4" style="display: none;">
        <div class="card shadow-sm p-3 rounded-4">
            <div class="mb-2">
                <label class="fw-bold">Tanggal Pengambilan</label>
                <input type="date" id="poDate" class="form-control" />
            </div>
            <div class="mb-2">
                <label class="fw-bold">Catatan PO</label>
                <textarea id="poNote" class="form-control" rows="2" placeholder="Catatan tambahan untuk PO..."></textarea>
            </div>
        </div>
    </div>

    <div class="row g-3">
        @foreach (var item in Model)
        {
            <div class="col-12">
                <div class="card border-0 shadow-sm rounded-4 overflow-hidden">
                    <div class="row g-0">
                        <div class="col-5">
                            <img src="@Url.Content(item.ImageUrl)" alt="@item.Name" class="img-fluid h-100 w-100 object-fit-cover">
                        </div>
                        <div class="col-7 p-3 d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="mb-1">@item.Name</h5>
                                <p class="text-muted small mb-1">@item.Description</p>
                                <p class="text-success fw-bold mb-1">Rp @item.Price.ToString("N0")</p>
                            </div>
                            <button class="btn btn-success btn-sm w-100 rounded-pill mt-2"
                                    onclick="openDetailModal(
                                        @item.Id,
                                        '@item.Name',
                                        @item.Price,
                                        '@item.Description',
                                        '@Url.Content(item.ImageUrl)')">
                                Tambah
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="mt-5">
        <h5 class="fw-bold mb-3">Order Detail</h5>
        <div id="orderDetailContainer"></div>

        <div class="mt-3 text-center">
            <button id="submitNowBtn" class="btn btn-success rounded-pill px-4" style="display: none;" onclick="submitOrder()">Submit Order</button>
            <button id="submitPoBtn" class="btn btn-warning rounded-pill px-4" style="display: none;" onclick="submitOrderPo()">Submit PO</button>
        </div>
    </div>
</div>

<!-- Modal Konfirmasi Submit Order -->
<div class="modal fade" id="orderConfirmModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-4 rounded-4">
            <h5 class="fw-bold mb-3">Konfirmasi Pesanan</h5>
            <div id="orderSummary"></div>
            <hr />
            <label class="fw-bold mb-2">Pilih Metode Pembayaran</label>
            <select id="paymentMethod" class="form-select mb-3" onchange="handlePaymentMethod(this.value)">
                <option value="cash">Cash</option>
                <option value="qris">QRIS</option>
                <option value="transfer">Transfer Bank</option>
            </select>

            <div id="qrisUpload" class="mb-3 d-none">
                <img src="~/images/qris.png" class="img-fluid rounded mb-2" alt="QRIS" />
                <input type="file" class="form-control" id="qrisProof" />
            </div>

            <div id="transferVA" class="mb-3 d-none">
                <label>Virtual Account: <strong>1234567890</strong></label>
            </div>

            <div class="text-end">
                <button class="btn btn-secondary me-2" data-bs-dismiss="modal">Batal</button>
                <button class="btn btn-success" onclick="confirmFinalOrder()">Submit</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Konfirmasi PO -->
<div class="modal fade" id="poConfirmModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-4 rounded-4">
            <h5 class="fw-bold mb-3">Konfirmasi Pre-Order</h5>
            <div id="poSummary"></div>
            <div class="alert alert-warning mt-3 rounded-3">
                Apakah Anda sudah yakin dengan menu yang Anda PO?<br />
                Kami akan memeriksa dan mengabari apakah pesanan PO Anda dapat diproses. Terima kasih!
            </div>
            <div class="text-end">
                <button class="btn btn-secondary me-2" data-bs-dismiss="modal">Batal</button>
                <button class="btn btn-warning" onclick="confirmFinalPo()">Ajukan PO</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="detailModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content p-3 rounded-4">
            <div class="modal-body">
                <div class="text-center mb-3">
                    <img id="modalImage" class="img-fluid rounded" style="max-height: 200px;" />
                </div>
                <div class="text-center text-muted mb-1">Makanan</div>
                <h5 id="modalTitle" class="text-center fw-bold mb-1"></h5>
                <p id="modalDesc" class="text-muted text-center small"></p>

                <label class="fw-bold d-block mt-3">Ukuran</label>
                <div id="variantOptions" class="d-flex gap-2 flex-wrap justify-content-center mb-3">
                    <button class="btn btn-outline-dark btn-sm rounded-pill" onclick="selectVariant('Kecil')">Kecil</button>
                    <button class="btn btn-outline-dark btn-sm rounded-pill" onclick="selectVariant('Sedang')">Sedang</button>
                    <button class="btn btn-outline-dark btn-sm rounded-pill" onclick="selectVariant('Besar')">Besar</button>
                </div>

                <label class="fw-bold">Catatan</label>
                <textarea id="modalNote" class="form-control mb-3" rows="2" placeholder="Tambahkan catatan..."></textarea>

                <div class="d-flex justify-content-between align-items-center mb-3">
                    <button class="btn btn-outline-success rounded-circle" onclick="changeQty(-1)">−</button>
                    <span id="modalQty" class="fs-5 fw-bold">1</span>
                    <button class="btn btn-outline-success rounded-circle" onclick="changeQty(1)">+</button>
                </div>

                <button class="btn btn-primary w-100 rounded-pill" onclick="addModalToCart()">Add to Cart</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let orderType = 'now';
    const orderData = [];

    function setOrderType(type) {
        orderType = type;
        document.getElementById('orderNowBtn').classList.toggle('active', type === 'now');
        document.getElementById('poBtn').classList.toggle('active', type === 'po');
        document.getElementById('poForm').style.display = (type === 'po') ? 'block' : 'none';

        document.getElementById('submitNowBtn').style.display = (type === 'now') ? 'inline-block' : 'none';
        document.getElementById('submitPoBtn').style.display = (type === 'po') ? 'inline-block' : 'none';

        renderOrderDetails();
    }

    let modalQty = 1;
    let modalItem = null;
    let selectedVariant = '';

    function openDetailModal(id, name, price, desc, imageUrl) {
        modalItem = { id, name, price, desc, imageUrl };
        modalQty = 1;
        selectedVariant = '';

        document.getElementById('modalImage').src = imageUrl;
        document.getElementById('modalTitle').innerText = name;
        document.getElementById('modalDesc').innerText = desc;
        document.getElementById('modalQty').innerText = modalQty;
        document.getElementById('modalNote').value = '';
        [...document.getElementById('variantOptions').children].forEach(btn => btn.classList.remove('active'));

        const modal = new bootstrap.Modal(document.getElementById('detailModal'));
        modal.show();
    }

    function selectVariant(variant) {
        selectedVariant = variant;
        [...document.getElementById('variantOptions').children].forEach(btn => {
            btn.classList.remove('active');
            if (btn.textContent === variant) btn.classList.add('active');
        });
    }

    function changeQty(change) {
        modalQty = Math.max(1, modalQty + change);
        document.getElementById('modalQty').innerText = modalQty;
    }

    function addModalToCart() {
        const note = document.getElementById('modalNote').value;

        if (!selectedVariant) {
            alert("Pilih ukuran terlebih dahulu!");
            return;
        }

        const item = {
            id: modalItem.id,
            name: modalItem.name + ' (' + selectedVariant + ')',
            qty: modalQty,
            price: modalItem.price,
            note: note,
            desc: modalItem.desc,
            imageUrl: modalItem.imageUrl,
            orderType
        };

        orderData.push(item);
        bootstrap.Modal.getInstance(document.getElementById('detailModal')).hide();
        renderOrderDetails();
    }

    function renderOrderDetails() {
        const container = document.getElementById('orderDetailContainer');
        container.innerHTML = '';

        if (orderData.length === 0) {
            container.innerHTML = '<p class="text-muted">Belum ada pesanan.</p>';
            return;
        }

        let totalHarga = 0;

        const rows = orderData.map(item => {
            const total = item.price * item.qty;
            totalHarga += total;
            return `
                <tr>
                    <td>${item.name}<br><small class="text-muted">${item.note || ''}</small></td>
                    <td>${item.qty}</td>
                    <td>Rp ${item.price.toLocaleString()}</td>
                    <td>Rp ${total.toLocaleString()}</td>
                </tr>
            `;
        });

        const table = `
            <table class="table table-bordered table-sm align-middle">
                <thead class="table-light">
                    <tr>
                        <th>Menu</th>
                        <th>Qty</th>
                        <th>Harga</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>${rows.join('')}</tbody>
            </table>
            <div class="text-end fw-bold">Total Harga: Rp ${totalHarga.toLocaleString()}</div>
        `;

        container.innerHTML = table;

        if (orderType === 'po') {
            const poDate = document.getElementById('poDate').value || '(Belum ditentukan)';
            const poNote = document.getElementById('poNote').value || '(Tidak ada catatan)';
            const info = `
                <div class="alert alert-info mt-3 rounded-3">
                    <strong>Jenis Order:</strong> PO<br>
                    <strong>Tanggal Pengambilan:</strong> ${poDate}<br>
                    <strong>Catatan PO:</strong> ${poNote}
                </div>
            `;
            container.innerHTML += info;
        }
    }

    function submitOrder() {
        alert("Order Now dikirim! Total item: " + orderData.length);
    }

    function submitOrderPo() {
        alert("PO dikirim! Total item: " + orderData.length);
    }

        function submitOrder() {
        if (orderData.length === 0) {
            alert("Pesanan masih kosong!");
            return;
        }

        let summary = generateOrderSummary();
        document.getElementById('orderSummary').innerHTML = summary;
        document.getElementById('paymentMethod').value = "cash";
        document.getElementById('qrisUpload').classList.add('d-none');
        document.getElementById('transferVA').classList.add('d-none');

        new bootstrap.Modal(document.getElementById('orderConfirmModal')).show();
    }

    function handlePaymentMethod(method) {
        document.getElementById('qrisUpload').classList.toggle('d-none', method !== 'qris');
        document.getElementById('transferVA').classList.toggle('d-none', method !== 'transfer');
    }

    function confirmFinalOrder() {
        const method = document.getElementById('paymentMethod').value;

        if (method === 'qris' && !document.getElementById('qrisProof').files.length) {
            alert("Silakan unggah bukti pembayaran QRIS!");
            return;
        }

        bootstrap.Modal.getInstance(document.getElementById('orderConfirmModal')).hide();

        if (method === "cash") {
            alert("Lakukan pembayaran ke kasir agar pesanan segera diproses.");
        } else {
            alert("Pesanan dengan metode " + method.toUpperCase() + " telah diterima.");
        }

        // Reset orderData jika perlu
        // orderData.length = 0;
        // renderOrderDetails();
    }


        function submitOrderPo() {
        if (orderData.length === 0) {
            alert("Pesanan masih kosong!");
            return;
        }

        const poDate = document.getElementById('poDate').value;
        if (!poDate) {
            alert("Silakan isi tanggal pengambilan terlebih dahulu!");
            return;
        }

        let summary = generateOrderSummary(true);
        document.getElementById('poSummary').innerHTML = summary;

        new bootstrap.Modal(document.getElementById('poConfirmModal')).show();
    }

    function confirmFinalPo() {
        bootstrap.Modal.getInstance(document.getElementById('poConfirmModal')).hide();
        const result = confirm("Anda yakin ingin mengajukan PO?");
        if (result) {
            alert("PO Anda telah dikirim. Mohon tunggu konfirmasi dari kami.");
            // Reset jika diperlukan
            // orderData.length = 0;
            // renderOrderDetails();
        }
    }


    function generateOrderSummary(isPo = false) {
    let totalHarga = 0;
    let html = '<table class="table table-bordered table-sm"><thead><tr><th>Menu</th><th>Qty</th><th>Total</th></tr></thead><tbody>';

    orderData.forEach(item => {
        const total = item.qty * item.price;
        totalHarga += total;
        html += `<tr><td>${item.name}<br><small>${item.note || ''}</small></td><td>${item.qty}</td><td>Rp ${total.toLocaleString()}</td></tr>`;
    });

    html += `</tbody></table><div class="fw-bold text-end">Total: Rp ${totalHarga.toLocaleString()}</div>`;

    if (isPo) {
        html += `
            <div class="mt-3"><strong>Tanggal Pengambilan:</strong> ${document.getElementById('poDate').value}</div>
            <div><strong>Catatan PO:</strong> ${document.getElementById('poNote').value || '-'}</div>
        `;
    }

    return html;
}

</script>

<style>
    .object-fit-cover {
        object-fit: cover;
    }

    .btn-outline-dark.active {
        background-color: #333;
        color: white;
    }

    .btn.active {
        background-color: #0d6efd !important;
        color: white !important;
    }

    .bg-light-custom {
        background: linear-gradient(to right, #ffe082, #ff8a65);
        color: #4e342e;
        border-radius: 1rem;
        padding: 2rem;
        text-align: center;
    }

    .btn-primary,
    .btn-success,
    .btn-warning {
        background-color: #ff6f00;
        border-color: #ff6f00;
        color: white;
    }

        .btn-primary:hover,
        .btn-success:hover,
        .btn-warning:hover {
            background-color: #e65100;
            border-color: #e65100;
        }

    .text-success {
        color: #ff6f00 !important;
    }

    .btn-outline-dark.active {
        background-color: #ff6f00;
        color: white;
        border-color: #ff6f00;
    }

    /* Tombol Order Type aktif */
    .btn.active {
        background-color: #ff6f00 !important;
        color: white !important;
        border-color: #ff6f00 !important;
    }


</style>
