@using System.Globalization
@model pos_system.Models.InventoryViewModel

@{
    ViewData["Title"] = "Inventory Barang";
}

<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">

<style>
     .custom-card {
         background-color: #ffffff;
         border-radius: 10px;
         box-shadow: 0 4px 12px rgba(0, 0, 0, 0.04);
         padding: 20px;
         border: 1px solid #f0f0f0;
     }

     .table thead th {
         background-color: #f9fafc;
         color: #4a4a4a;
         font-weight: 600;
     }

     .table td, .table th {
         vertical-align: middle;
     }

     .btn-custom {
         border-radius: 8px;
         padding: 4px 12px;
         font-size: 0.875rem;
     }

     .btn-add {
         background-color: #d3f0ff;
         color: #000;
         border: 1px solid #c2e4f3;
     }

     .btn-inout {
         background-color: #e0fce0;
         color: #14532d;
         border: 1px solid #b2f2bb;
     }

     .btn-pdf {
         background-color: #ffe7cc;
         color: #8a4f00;
         border: 1px solid #ffc080;
     }

     .btn-excel {
         background-color: #e6f4ea;
         color: #196f3d;
         border: 1px solid #b7dfc6;
     }

     .btn-edit {
         background-color: #fff5cc;
         color: #856404;
         border: 1px solid #ffeeba;
     }

     .btn-delete {
         background-color: #ffe5e5;
         color: #a10000;
         border: 1px solid #ffcccc;
     }
</style>


<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold" style="color: #333;">Inventory Item</h2>
        <div class="d-flex flex-wrap gap-2">
            <a class="btn btn-add btn-custom" asp-action="AddInventory">
                <i class="bi bi-plus-circle me-1"></i> Add Item
            </a>

            <a class="btn btn-pdf btn-custom" asp-action="ExportPdf">
                <i class="bi bi-file-earmark-pdf me-1"></i> Export to PDF
            </a>
            <a class="btn btn-excel btn-custom" asp-action="ExportExcel">
                <i class="bi bi-file-earmark-excel me-1"></i> Export to Excel
            </a>
        </div>
    </div>

    <form asp-action="Index" method="get" class="row mb-4">
        <div class="col-md-6 mb-2">
            <input type="text" name="search" class="form-control" placeholder="Search item name..."
                   value="" />
        </div>
        <div class="col-md-4 mb-2">
            <select name="searchPartType" class="form-select">
                <option value="">All</option>
                @foreach(var kat in Model.PartType)
                {
                    <option value="@kat.PartTypeName">@kat.PartTypeName</option>
                }
            </select>
        </div>
        <div class="col-md-2 mb-2">
            <button type="submit" class="btn btn-secondary w-100"><i class="bi bi-search"></i> Filter</button>
        </div>
    </form>

    <div class="custom-card">
        <div class="table-responsive">
            <table class="table table-bordered table-hover mb-0">
                <thead>
                    <tr class="text-center">
                        <th>Item Name</th>
                        <th>Category</th>
                        <th>Unit</th>
                        <th>Price</th>
                        <th>Note</th>
                        <th style="width: 200px;">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.PartList != null && Model.PartList.Count > 0)
                    {
                        foreach (var item in Model.PartList)
                        {
                            <tr>
                                <td>@item.PartName</td>
                                <td>@item.PartTypeName</td>
                                <td class="text-center">@(item.PartQty + " " + item.UnitCd)</td>
                                <td>@item.Price.ToString("C0", new CultureInfo("id-ID"))</td>
                                <td>@(string.IsNullOrEmpty(item.Note) ? "-" : item.Note)</td>
                                <td class="text-center">
                                    <a href="#" class="btn btn-inout btn-custom me-2" data-part-id="@item.PartId">
                                        <i class="bi bi-arrow-left-right me-1"></i>
                                    </a>
                                    <a href="#" class="btn btn-edit btn-custom me-2" data-part-id="@item.PartId">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <button class="btn btn-delete btn-custom" data-bs-toggle="modal" data-bs-target="#deleteModal" data-part-id="@item.PartId">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center text-muted py-4">
                                <i class="bi bi-info-circle"></i> No inventory items available.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="editStockModalContainer"></div>

<!-- Modal Konfirmasi Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<div id="editModalContainer"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.btn-edit').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const partId = this.getAttribute('data-part-id');
                LoadEditModal(partId);
            });
        });
    });

    function LoadEditModal(partId) {
        fetch(`/Inventory/LoadEditModal?id=${partId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('editModalContainer').innerHTML = html;
                const modalElement = document.getElementById('editModal');
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            })
            .catch(error => console.error('Gagal load modal:', error));
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.btn-inout').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const partId = this.getAttribute('data-part-id');
                GetEditStockModal(partId);
            });
        });
    });

    function GetEditStockModal(partId) {
        fetch(`/Inventory/GetEditStockModal?partId=${partId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('editStockModalContainer').innerHTML = html;
                const modalElement = document.getElementById('inOutModal');
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            })
            .catch(error => console.error('Gagal load modal:', error));
    }
</script>

<script>
    let partIdToDelete = "";

    const deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        partIdToDelete = button.getAttribute('data-part-id');
    });

    document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
        const formData = new URLSearchParams();
        formData.append("id", partIdToDelete);

        fetch('/Inventory/DeletePartConfirmed', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert("Gagal menghapus data: " + data.message);
                }
            })
            .catch(error => console.error('Error:', error));
    });
</script>

<script>
    function adjustStock(amount) {
        const input = document.getElementById("stockInput");
        if (input) {
            let currentValue = parseInt(input.value) || 0;
            input.value = currentValue + amount;
        }
    }
</script>