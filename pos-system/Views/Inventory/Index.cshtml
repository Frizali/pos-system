@using System.Globalization
@model pos_system.Models.InventoryViewModel

@{
    ViewData["Title"] = "Inventory Barang";
}

<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">

<style>
    .table-header-cus {
        margin-right: .5rem;
        text-transform: none;
        font-weight: 500;
        text-align: center;
        padding: .7rem;
        border-radius: 50px;
        margin-bottom: .5rem;
    }

    .search-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 38px;
        width: 38px;
        border-radius: 50px;
        cursor: pointer;
    }

    .borderless td, .borderless th {
        border: none;
    }

    .pill-wrapper-success {
        column-gap: .1rem;
        font-size: .8rem;
        color: #328572;
        width: max-content;
        height: 28px;
        padding: 0 .7rem 0 .7rem;
        border-radius: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba(28, 135, 48, .05);
    }

    .btn-custom {
        width:38px;
        height:38px;
        display:flex;
        justify-content:center;
        align-items:center;
        font-size: 0.875rem;
    }

    .btn-add {
        background-color: #d3f0ff;
        color: #000;
        border: 1px solid #c2e4f3;
    }

    .btn-inout {
        background-color: #e0fce0;
        color: #14532d;
        border: 1px solid #b2f2bb;
    }

    .btn-pdf {
        background-color: #ffe7cc;
        color: #8a4f00;
        border: 1px solid #ffc080;
    }

    .btn-excel {
        background-color: #e6f4ea;
        color: #196f3d;
        border: 1px solid #b7dfc6;
    }

    .btn-edit {
        background-color: #fff5cc;
        color: #856404;
        border: 1px solid #ffeeba;
    }

    .btn-delete {
        background-color: #ffe5e5;
        color: #a10000;
        border: 1px solid #ffcccc;
    }
</style>

<div class="container">
    <div class="p-2 bg-white d-flex flex-column gap-2">
        @foreach(var item in Model.PartList.Where(p => p.PartQty <= p.LowerLimit).ToList())
        {
            <div class="toast fade show w-100" role="alert" aria-live="assertive" aria-atomic="true" style="border-color:#ffcccc;box-shadow:none;">
                <div class="toast-header" style="border-bottom:0;background-color:#ffe5e5;color:#a10000;">
                    <svg aria-hidden="true" class="bd-placeholder-img rounded me-2" height="20" preserveAspectRatio="xMidYMid slice" width="20" xmlns="http://www.w3.org/2000/svg"><rect width="100%" height="100%" fill="#FC4A4A"></rect></svg>
                    <p class="me-auto m-0"> <strong>@item.PartName</strong> stock is below the safety threshold! Immediate restocking is required.</p>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        }
    </div>
    <div class="bg-white p-2">
        <div class="d-flex justify-content-between">
            <div class="d-flex gap-2 align-items-center">
                <h5 class="m-0">Inventory Item</h5>
            </div>
            <div class="d-flex gap-2">
                <form asp-action="Index" class="d-flex gap-2 align-items-center">
                    <div class="d-flex align-items-center gap-2">
                        <label class="label-text">Type:</label>
                        <select class="form-select" aria-label="Default select example" style="border-radius:50px;padding:.5rem 2.25rem .5rem 1.5rem;border-color:rgba(108, 117, 125, .2);" id="report-name" name="searchPartType">
                            <option value="">All</option>
                            @foreach (var kat in Model.PartType)
                            {
                                <option value="@kat.PartTypeName">@kat.PartTypeName</option>
                            }
                        </select>
                    </div>
                    <button class="search-icon bg-light border-0" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </form>
                <a class="text-decoration-none text-black" asp-action="AddInventory">
                    <div class="search-icon bg-light">
                        <i class="bi bi-patch-plus"></i>
                    </div>
                </a>
            </div>
        </div>
    </div>
    <div class="bg-white p-2">
        <table class="table table-borderless">
            <thead>
                <tr>
                    <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Item Name</div></th>
                    <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Category</div></th>
                    <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Quantity</div></th>
                    <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Price Per Unit</div></th>
                    <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Note</div></th>
                    <th scope="col" class="p-0" style="width: 200px;"><div class="table-header-cus text-muted bg-light mx-0">Action
    </div></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PartList)
                {
                    <tr class="text-center">
                        <td>@item.PartName</td>
                        <td>@item.PartTypeName</td>
                        <td class="text-center">@(item.PartQty + " " + item.UnitCd)</td>
                        <td>@item.Price.ToString("C0", new CultureInfo("id-ID"))</td>
                        <td>@(string.IsNullOrEmpty(item.Note) ? "-" : item.Note)</td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center">
                                <a href="#" class="btn btn-inout btn-custom me-2" data-part-id="@item.PartId">
                                    <i class="bi bi-arrow-left-right me-1"></i>
                                </a>
                                <a href="#" class="btn btn-edit btn-custom me-2" data-part-id="@item.PartId">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <button class="btn btn-delete btn-custom" data-bs-toggle="modal" data-bs-target="#deleteModal" data-part-id="@item.PartId">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>

<div id="editStockModalContainer"></div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<div id="editModalContainer"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.btn-edit').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const partId = this.getAttribute('data-part-id');
                LoadEditModal(partId);
            });
        });
    });

    function LoadEditModal(partId) {
        fetch(`/Inventory/LoadEditModal?id=${partId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('editModalContainer').innerHTML = html;
                const modalElement = document.getElementById('editModal');
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            })
            .catch(error => console.error('Gagal load modal:', error));
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.btn-inout').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                const partId = this.getAttribute('data-part-id');
                GetEditStockModal(partId);
            });
        });
    });

    function GetEditStockModal(partId) {
        fetch(`/Inventory/GetEditStockModal?partId=${partId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('editStockModalContainer').innerHTML = html;
                const modalElement = document.getElementById('inOutModal');
                const modal = new bootstrap.Modal(modalElement);
                modal.show();
            })
            .catch(error => console.error('Gagal load modal:', error));
    }
</script>

<script>
    let partIdToDelete = "";

    const deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        partIdToDelete = button.getAttribute('data-part-id');
    });

    document.getElementById("confirmDeleteBtn").addEventListener("click", function () {
        const formData = new URLSearchParams();
        formData.append("id", partIdToDelete);

        fetch('/Inventory/DeletePartConfirmed', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                    if (data.success) {
        Swal.fire({
            icon: 'success',
            title: 'Deleted successfully.',
            text: 'Data deleted successfully.',
            confirmButtonColor: '#3085d6'
        }).then(() => {
            location.reload();
        });
    } else {
        Swal.fire({
            icon: 'error',
            title: 'Failed to delete.',
            text: data.message || 'An error occurred while deleting.',
            confirmButtonColor: '#d33'
        });
    }

            })
            .catch(error => console.error('Error:', error));
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    @if (TempData["SweetAlert_Icon"] != null)
    {
        <text>
                Swal.fire({
                    icon: '@TempData["SweetAlert_Icon"]',
                    title: '@TempData["SweetAlert_Title"]',
                    text: '@TempData["SweetAlert_Message"]',
                    confirmButtonColor: '#3085d6'
                });
        </text>
    }
</script>

<script>
    function adjustStock(amount) {
        const input = document.getElementById("stockInput");
        if (input) {
            let currentValue = parseInt(input.value) || 0;
            input.value = currentValue + amount;
        }
    }
</script>