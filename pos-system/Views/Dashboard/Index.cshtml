@{
    ViewData["Title"] = "Home Page";
}

@model DashboardViewModel

<link rel="stylesheet" href="~/css/Dashboard/index.css" asp-append-version="true" />
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">

<div class="container">
    <div class="d-flex align-items-center bg-white rounded gap-3 p-2 mb-3">
        <label class="label-text">Date Periode:</label>
        <div class="input-group bg-white" style="width:20%">
            <input id="dateRange" type="text" class="form-control search-input bg-light" placeholder="Monthly" style="border-radius: 50px 0 0 50px;" readonly>
            <span class="input-group-text search-input-icon">
                <i class="bi bi-calendar4-range search-icon"></i>
            </span>
        </div>
    </div>
    <div class="row g-3 mb-3">
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card dashboard-card h-100 border-0">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-center mb-2">
                        <div class="circle-wrapper bg-light me-2">
                            <i class="bi bi-graph-up"></i>
                        </div>
                        <span class="card-title mb-0">Total Sales Amount</span>
                    </div>
                    <div class="value-container d-flex justify-content-between align-items-baseline mt-auto">
                        <h2 class="card-value">@Model.SalesAnalytics.TotalSalesAmount</h2>
                        <span class="card-unit">Rupiah</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-12 col-sm-6 col-md-3">
            <div class="card dashboard-card h-100 border-0">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-center mb-2">
                        <div class="circle-wrapper bg-light me-2">
                            <i class="bi bi-box"></i>
                        </div>
                        <span class="card-title mb-0">Total Product Sales</span>
                    </div>
                    <div class="value-container d-flex justify-content-between align-items-baseline mt-auto">
                        <h2 class="card-value">@Model.SalesAnalytics.TotalProductSales</h2>
                        <span class="card-unit">Items</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-12 col-sm-6 col-md-3">
            <div class="card dashboard-card h-100 border-0">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-center mb-2">
                        <div class="circle-wrapper bg-light me-2">
                            <i class="bi bi-people"></i>
                        </div>
                        <span class="card-title mb-0">Total Customers</span>
                    </div>
                    <div class="value-container d-flex justify-content-between align-items-baseline mt-auto">
                        <h2 class="card-value">@Model.SalesAnalytics.TotalCustomers</h2>
                        <span class="card-unit">Persons</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-12 col-sm-6 col-md-3">
            <div class="card dashboard-card h-100 border-0">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex align-items-center mb-2">
                        <div class="circle-wrapper bg-light me-2">
                            <i class="bi bi-people"></i>
                        </div>
                        <span class="card-title mb-0">Total Customers</span>
                    </div>
                    <div class="value-container d-flex justify-content-between align-items-baseline mt-auto">
                        <h2 class="card-value">@Model.SalesAnalytics.TotalCustomers</h2>
                        <span class="card-unit">Persons</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row g-3">
        <div class="col-12 col-sm-6 col-md-8">
            <div class="bg-white d-flex gap-2 align-items-center p-3">
                <div class="dot-middle bg-primary"></div>
                <h5 class="m-0">Report Graph</h5>
            </div>
            <div class="card dashboard-card h-100 border-0" style="max-height: 400px;">
                <canvas class="card-body" id="styledChart"></canvas>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-md-4">
            <div class="bg-white d-flex gap-2 align-items-center p-3">
                <div class="dot-middle bg-primary"></div>
                <h5 class="m-0">Favorite Product</h5>
            </div>
            <div class="card dashboard-card border-0">
                <div class="card-body" style="max-height:400px;overflow:scroll">
                    <table class="table table-borderless">
                        <thead>
                            <tr>
                                <th scope="col" class="p-0">
                                    <div class="table-header-cus text-muted">
                                        ProductName
                                    </div>
                                </th>
                                <th scope="col" class="p-0">
                                    <div class="table-header-cus text-muted">
                                        TotalOrders
                                    </div>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.FavoriteProducts.Any())
                            {
                                var indexedItems = Model.FavoriteProducts.Select((item, index) => new { item, index });

                                foreach (var pair in indexedItems)
                                {
                                    <tr class="border-bottom">
                                        <td class="text-center p-3">
                                            <h6 class="m-0">@pair.item.ProductName</h6>
                                            <p class="text-muted m-0">@pair.item.CategoryName</p>
                                        </td>
                                        <td class="text-center p-3">
                                            <div class="d-flex gap-1 justify-content-center">
                                                <p>@pair.item.TotalOrder</p>
                                                <p class="text-muted">Times</p>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const pad = (num) => num.toString().padStart(2, '0');

    const formatDate = (date) => {
        const year = date.getFullYear();
        const month = pad(date.getMonth() + 1);
        const day = pad(date.getDate());
        return `${year}-${month}-${day}`;
    };

    $(document).ready(function () {
        flatpickr("#dateRange", {
            mode: "range",
            dateFormat: "Y-m-d",
            altInput: true,
            altFormat: "F Y",
            allowInput: false,
            onChange: function (selectedDates) {
                if (selectedDates.length === 2) {
                    const fromDate = formatDate(selectedDates[0]);
                    const toDate = formatDate(selectedDates[1]);

                    window.location.href = `/Dashboard/Index?fromDate=${fromDate}&toDate=${toDate}`;
                }
            }
        });
    });


    const labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Chart.Labels));
    const data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Chart.Data));
    const pointStyles = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Chart.PointStyles));

    const ctx = document.getElementById('styledChart').getContext('2d');

    const styledChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                data: data,
                fill: false,
                borderColor: 'rgba(13,110,253)',
                tension: 0.3,
                pointStyle: false,
                pointRadius: 7,
                pointBackgroundColor: 'rgba(13,110,253)'
            }]
        },
        options: {
            plugins: {
                title: {
                    display: false
                },
                legend: {
                    display: false
                }
            },
            scales: {
              x: {
                grid: {
                  display: false
                }
              },
              y: {
                beginAtZero: true,
                grid: {
                  display: false
                }
              }
            }
        }
    });
</script>

