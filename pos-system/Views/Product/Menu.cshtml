@{
    Layout = "~/Views/Shared/_OrderLayout.cshtml";
    ViewData["Title"] = "Menu";
}

@model MenuViewModel

<link rel="stylesheet" href="~/css/Product/index.css" asp-append-version="true" />

<div class="container">
    <div id="scrollable" style="overflow-x: auto;cursor: grab;scrollbar-width: none;user-select: none;display: flex;flex-wrap: nowrap;">
        @Html.Partial("_ProductCategory", Model.productCategories)
    </div>
    <div>
        <div>
            <div class="row g-3">
                @foreach (var item in Model.products)
                {
                    <div class="col-md-4 col-sm-12 col-xl-3">
                        <div class="card clickable-card h-100" data-id="@item.ProductId" style="cursor: pointer;">
                            <div class="card-body">
                                <div>
                                    <img src="~/images/egg-tart.jpg" class="w-100"/>
                                </div>
                                <h6 class="card-title m-0">@item.ProductName</h6>
                                <div class="d-flex flex-md-column flex-xl-row justify-content-between">
                                    <p class="card-text m-0">@item.Category.CategoryName</p>
                                    <b>
                                        <p class="card-text">
                                            @{
                                                var priceText = String.Empty;
                                                if (item.TblProductVariants.Count() > 1)
                                                {
                                                    var lowPrice = item.TblProductVariants.Min(x => x.VariantPrice);
                                                    var hightPrice = item.TblProductVariants.Max(x => x.VariantPrice);
                                                    priceText = $"Rp{lowPrice}-{hightPrice}";
                                                }
                                                else if (item.TblProductVariants.Count() == 1)
                                                {
                                                    var price = item.TblProductVariants.Select(x => x.VariantPrice).FirstOrDefault();
                                                    priceText = $"Rp{price}";
                                                }
                                                else
                                                {
                                                    priceText = $"Rp{item.Price}";
                                                }
                                            }
                                            @priceText
                                        </p>
                                    </b>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="productDetailModal" tabindex="-1" role="dialog" aria-labelledby="productDetailModalLabel" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content modal-menu border-0">
            <div class="modal-header">
                <h6 class="modal-title text-center" id="productDetailModalLabel">Product Detail</h6>
                <button type="button" class="close border-0" data-dismiss="modal" aria-label="Close" id="product-detail-close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="productModalBody">
            </div>
            <div class="modal-footer p-0 border-top-0">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default btn-number" data-type="minus" data-field="quant[1]">
                                        <i class="bi bi-dash"></i>
                                    </button>
                                </span>
                                <input type="text" name="quant[1]" class="form-control input-number text-center border-white" value="1" min="1" max="9999">
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default btn-number" data-type="plus" data-field="quant[1]">
                                        <i class="bi bi-plus"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-primary btn-add-cart m-0 w-100" data-dismiss="modal">Add to Cart<span id="priceContainer"></span></button>
            </div>
        </div>
    </div>
</div>

<script>
    const variants = @Html.Raw(Json.Serialize(Model.products.SelectMany(x => x.TblProductVariants).Select(v => new
        {
            sku = v.Sku,
            price = v.VariantPrice
        })));

    const products = @Html.Raw(Json.Serialize(Model.products.Select(x => new
        {
            id = x.ProductId,
            stock = x.ProductStock,
            price = x.Price
        })));
</script>

<script>
    let selected = {};
    let menuPrice = 0;

    $(document).on('click', '.variant-option-tag', function () {
        const value = $(this).data('value');
        const group = $(this).data('group');

        $(this).closest('.body-variant-group').find('.variant-option-tag').removeClass('option-selected');
        $(this).addClass('option-selected');

        selected[group] = value;

        var input = parseInt($("input[name='quant[1]']").val());
        const totalGroups = $('.body-variant-group').length;
        if (Object.keys(selected).length === totalGroups) {
            const combined = Array.from({ length: totalGroups }, (_, i) => selected[i]).join('-');
            const match = variants.find(v => v.sku === combined);

            if (match) {
                menuPrice = match.price;
                $('#priceContainer').text(' (Rp' + match.price * input + ')');
            } else {
                $('#priceContainer').text(' (-)');
            }
        }
    });
</script>


<script src="~/Views/Product/Menu.cshtml.js"></script>
