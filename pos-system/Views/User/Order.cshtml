@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@model List<TblOrder>
@{
    Layout = null;
    ViewData["Title"] = "Order";
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - pos_system</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet" />
    <link href="~/lib/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        .tabs {
            display: flex;
            cursor: pointer;
            margin-bottom: 1rem;
        }

        .tab {
            background-color: white;
            border-radius: .5rem;
            color: black;
        }

            .tab.active {
                background-color: #0d6efd;
                color: white;
            }

        .tab-content {
            border: 1px solid #ccc;
            padding: 15px;
            display: none;
        }

            .tab-content.active {
                display: block;
            }

        .box {
            display: flex;
            justify-content: start;
            align-items: center;
            height: 32px;
        }

        .table-header-cus {
            margin-right: .5rem;
            text-transform: none;
            font-weight: 500;
            text-align: center;
            padding: .7rem;
            /* border: 1px solid rgba(108, 117, 125, .2); */
            border-radius: 50px;
            margin-bottom: .5rem;
        }

        .search-icon {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 38px;
            width: 38px;
            border-radius: 50px;
            cursor: pointer;
        }

        .btn-add {
            background-color: #d3f0ff;
            color: #000;
            border: 1px solid #c2e4f3;
        }

        .btn-inout {
            background-color: #e0fce0;
            color: #14532d;
            border: 1px solid #b2f2bb;
        }

        .btn-delete {
            background-color: #ffe5e5;
            color: #a10000;
            border: 1px solid #ffcccc;
        }
    </style>
</head>
<body style="background-color:rgb(248,249,250)">
    <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center" href="#">
                <img src="~/images/Logo omahmu HD.png" alt="Logo" width="50" class="me-2" />
                <strong>Angkringan Omahmu</strong>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                <ul class="navbar-nav align-items-center">
                    <li class="nav-item"><a class="nav-link active" href="#home">Home</a></li>
                    <li class="nav-item"><a class="nav-link" asp-controller="Menu" asp-action="Index">Menu</a></li>
                    <li class="nav-item"><a class="nav-link" href="#service">Service</a></li>
                    <li class="nav-item"><a class="nav-link" href="#review">Review</a></li>
                </ul>

                @if (String.IsNullOrEmpty(@User.Identity?.Name))
                {
                    <a href="Auth/Login" class="btn btn-orange ms-3">Login</a>
                }
                else
                {
                    <p class="fw-bold mb-0 ms-3">@User.Identity?.Name</p>
                }

                <div class="dropdown ms-3">
                    <button class="btn btn-light border-0 dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-person-circle fs-4"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li><a class="dropdown-item" asp-controller="User" asp-action="ManageAcc">Setting</a></li>
                        <li><a class="dropdown-item" asp-controller="PreOrder" asp-action="UserOrder">Order</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" asp-controller="Auth" asp-action="Logout">Logout</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>
    <div class="container">

        <div class="bg-white p-2">
            <form asp-action="Order" asp-controller="Activity" method="get">
                <div class="d-flex justify-content-between">
                    <div class="datetime-container d-flex gap-3 align-items-center">
                        <div>
                            Date:
                        </div>
                        <div class="d-flex gap-3 align-items-center py-1 ps-3 pe-1" style="border-radius:50px;border:1px solid rgba(108, 117, 125, .2);">
                            <input type="date" class="border-0 text-muted" name="fromDate" />
                        </div>
                        <div>
                            -
                        </div>
                        <div class="d-flex gap-3 align-items-center py-1 ps-3 pe-1" style="border-radius:50px;border:1px solid rgba(108, 117, 125, .2);">
                            <input type="date" class="border-0 text-muted" name="toDate" />
                        </div>
                    </div>
                    <button class="search-icon bg-light border-0" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
        </div>
        <div class="bg-white p-2">
            <table class="table table-borderless">
                <thead>
                    <tr>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">#</div></th>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Scheduled At</div></th>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">User</div></th>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Status</div></th>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Total Payment</div></th>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Orders</div></th>
                        <th scope="col" class="p-0"><div class="table-header-cus text-muted bg-light">Action</div></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="text-center">
                            <th>@item.OrderNumber</th>
                            <td>
                                @{
                                    var dateConvert = item.ScheduledAt?.ToString("MM/dd/yyyy - HH:mm");
                                } @dateConvert
                            </td>
                            <td>@item.Cashier</td>
                            <td>@item.PreOrderStatus</td>
                            <td>Rp @item.TotalPrice</td>
                            <td>
                                <button class="text-primary text-decoration-underline detail-download bg-transparent border-0" data-id="@item.OrderId" data-total="@item.TotalPrice">
                                    Detail
                                </button>
                            </td>
                            <td>
                                @if(@item.PreOrderStatus == "Awaiting Payment"){
                                <button type="button" class="btn btn-inout btn-custom me-2 btn-action-status payment-btn" data-id="@item.OrderId" data-total="@item.TotalPrice" data-action="Awaiting Payment">
                                    <i class="bi bi-credit-card"></i>
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>


    </div>
    <script src="https://app.sandbox.midtrans.com/snap/snap.js"
            data-client-key="@Configuration["Midtrans:ClientKey"]">
    </script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.querySelector(".payment-btn").addEventListener("click", function (e) {
            const orderId = this.getAttribute("data-id");
            const total = parseFloat(this.getAttribute("data-total"));
            const action = "Paid"

            const data = {
                orderId: orderId,
                totalAmount: total,
            };

            fetch('@Url.Action("GetSnapToken", "Order")', {
                method: 'POST',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(res => res.json())
            .then(data => {
                snap.pay(data.token, {
                    onSuccess: function () {
                        var url = `/Order/UpdatePreOrderStatus?orderId=${orderId}&status=${action}`;
                        window.location.href = url;
                    },
                    onClose: function () {
                        alert("Pembayaran dibatalkan");
                    },
                    onError: function () {
                        alert("Terjadi error saat pembayaran");
                    }
                });
            })
            .catch(err => {
                console.error(err);
                alert("Terjadi kesalahan saat menghubungi server.");
            });
        });


        $(document).on("click", ".detail-download", function () {
            const reportName = "PreOrder Detail";
            const id = $(this).data("id");
            const fromDate = "";
            const toDate = "";

            fetch('/Dashboard/DownloadReport', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ FromDate: fromDate, ToDate: toDate, ReportName: reportName, ID: id })
            })
            .then(response => response.blob())
            .then(blob => {
                const url = URL.createObjectURL(blob);
                window.open(url, '_blank');
            });
        });
    </script>
</body>
</html>
